// <auto-generated />
using CinemaProject.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221117152038_InitialCreateUpdate")]
    partial class InitialCreateUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaProject.Core.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Yüzüklerin Efendisi: Yüzük Kardeşliği",
                            Year = 2001
                        },
                        new
                        {
                            Id = 2,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Yüzüklerin Efendisi: İki Kule",
                            Year = 2002
                        },
                        new
                        {
                            Id = 3,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Yüzüklerin Efendisi: Kralın Dönüşü",
                            Year = 2003
                        },
                        new
                        {
                            Id = 4,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Hobbit: Beklenmedik Yolculuk",
                            Year = 2012
                        },
                        new
                        {
                            Id = 5,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Hobbit: Smaug'un Çorak Toprakları",
                            Year = 2013
                        },
                        new
                        {
                            Id = 6,
                            Director = "Peter Jackson",
                            Genre = "Epik Fantezi",
                            Name = "Hobbit: Beş Ordunun Savaşı",
                            Year = 2014
                        },
                        new
                        {
                            Id = 7,
                            Director = "Gore Verbinski",
                            Genre = "Macera Aksiyon",
                            Name = "Karayip Korsanları: Siyah İnci'nin Laneti",
                            Year = 2003
                        },
                        new
                        {
                            Id = 8,
                            Director = "Gore Verbinski",
                            Genre = "Macera Aksiyon",
                            Name = "Karayip Korsanları: Ölü Adamın Sandığı",
                            Year = 2006
                        },
                        new
                        {
                            Id = 9,
                            Director = "Gore Verbinski",
                            Genre = "Macera Aksiyon",
                            Name = "Karayip Korsanları: Dünyanın Sonu",
                            Year = 2007
                        },
                        new
                        {
                            Id = 10,
                            Director = "Robb Marshall",
                            Genre = "Macera Aksiyon",
                            Name = "Karayip Korsanları: Gizemli Denizlerde",
                            Year = 2011
                        },
                        new
                        {
                            Id = 11,
                            Director = "Espen Sandberg",
                            Genre = "Macera Aksiyon",
                            Name = "Karayip Korsanları: Salazar'ın İntikamı",
                            Year = 2017
                        },
                        new
                        {
                            Id = 12,
                            Director = "Mehmet Ada Öztekin",
                            Genre = "Dram",
                            Name = "7. Koğuştaki Mucize",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CinemaProject.Core.MovieTheater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.ToTable("MovieTheaters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 12,
                            Name = "Cinemaximum"
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 11,
                            Name = "Meram"
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 10,
                            Name = "Beyoğlu Yeşilçam"
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 9,
                            Name = "Sancaktepe Çamsanpark"
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 8,
                            Name = "Galeria Cine Matriks"
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 7,
                            Name = "Ataköy Paribu Cineverse"
                        },
                        new
                        {
                            Id = 7,
                            CinemaId = 6,
                            Name = "Avcılar Pelican Mall Cinema Pink"
                        },
                        new
                        {
                            Id = 8,
                            CinemaId = 5,
                            Name = "Metroport Cine VIP"
                        },
                        new
                        {
                            Id = 9,
                            CinemaId = 4,
                            Name = "Bakırköy Carousel Cinema Pink"
                        },
                        new
                        {
                            Id = 10,
                            CinemaId = 3,
                            Name = "Halkalı 212 Cinemarine"
                        },
                        new
                        {
                            Id = 11,
                            CinemaId = 2,
                            Name = "Cinetech Mall Of İstanbul"
                        },
                        new
                        {
                            Id = 12,
                            CinemaId = 1,
                            Name = "Beylikdüzü Perla Vista Cinema Pink"
                        });
                });

            modelBuilder.Entity("CinemaProject.Core.MovieTheater", b =>
                {
                    b.HasOne("CinemaProject.Core.Cinema", "Cinema")
                        .WithMany("MovieTheaters")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaProject.Core.Cinema", b =>
                {
                    b.Navigation("MovieTheaters");
                });
#pragma warning restore 612, 618
        }
    }
}
